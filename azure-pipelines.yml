name: $(rev.major).$(rev.minor).$(rev:r)

# trigger: 
# - main

pool:
  vmImage: windows-latest

variables:
  packages: 'src/**/*.csproj'
  tests: 'tests/**/*.csproj'
  configuration: release
  description: |
    A lightweight and efficient implementation of the Result pattern for .NET. 
    Designed to streamline error and success handling with support for both reference (Result) and value types (ValueResult).

    Features:
    Class-based (Result): Ideal for scenarios requiring reference semantics.
    Struct-based (ValueResult): Immutable and optimized for high-performance use cases.
    Extensibility: Easily integrate custom error handling logic.

    Key Types:
    IError, Error
    IResult, IResult<T>
    Result, Result<T>
    ValueResult, ValueResult<T>
    
    Perfect for replacing exceptions with clean, type-safe alternatives.

steps:
- task: DotNetCoreCLI@2
  displayName: .NET Restore
  inputs:
    command: restore
    
- task: DotNetCoreCLI@2
  displayName: .NET Test
  inputs:
    command: test
    projects: $(tests)

- task: DotNetCoreCLI@2
  displayName: .NET Pack
  inputs:
    command: pack
    packagesToPack: $(packages)
    configuration: $(configuration)
    versioningScheme: byBuildNumber
    buildProperties: |
      Authors=dzhukovsky;
      PackageIconUrl=;
      Description=$(description);
      RepositoryUrl=https://github.com/dzhukovsky/CleanResults;
      RepositoryType=git;
      PackageReadmeFile=README.md;
      PackageLicenseFile=LICENSE;

- task: NuGetCommand@2
  displayName: .NET Push
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'nuget.org'
