name: $(version) b$(rev:r)

trigger: none

pool:
  vmImage: windows-latest

variables:
  repository_url: https://github.com/dzhukovsky/CleanResults
  authors: Dmitry Zhukovsky
  license: MIT
  tags: Result Results exception error handling
  description: |
    A lightweight and efficient implementation of the Result pattern for .NET. Designed to streamline error and success handling with support for both reference (Result) and value types (ValueResult).

    Features:
    Class-based (Result): Ideal for scenarios requiring reference semantics.
    Struct-based (ValueResult): Immutable and optimized for high-performance use cases.
    Extensibility: Easily integrate custom error handling logic.

    Key Types:
    IError, Error
    IResult, IResult<T>
    Result, Result<T>
    ValueResult, ValueResult<T>

steps:
- task: DotNetCoreCLI@2
  displayName: .NET Restore
  inputs:
    command: 'restore'
    
- task: DotNetCoreCLI@2
  displayName: .NET Test
  inputs:
    command: 'test'
    projects: 'tests/**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: .NET Pack
  inputs:
    command: 'pack'
    packagesToPack: 'src/**/*.csproj'
    configuration: 'release'
    includesource: true
    versioningScheme: 'off'
    buildProperties: 'Version=$(version);Authors=$(authors);RepositoryUrl=$(repository_url);PackageProjectUrl=$(repository_url);PackageIconUrl=;Description="$(description)";PackageLicenseExpression=$(license);PackageTags=$(tags);Deterministic=true;ContinuousIntegrationBuild=true;SymbolPackageFormat=snupkg;'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: NuGetCommand@2
  displayName: Nuget Push
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'nuget.org'
