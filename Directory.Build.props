<Project>
  <PropertyGroup>
    <Authors>dzhukovsky</Authors>
    <RepositoryType>git</RepositoryType>
    <RepositoryUrl>https://github.com/dzhukovsky/CleanResults</RepositoryUrl>
    <!--<PackageIconUrl></PackageIconUrl>-->
    <PackageReadmeFile>../README.md</PackageReadmeFile>
    <PackageLicenseFile>../LICENSE</PackageLicenseFile>
    <Description>
      A lightweight and efficient implementation of the Result pattern for .NET.
      Designed to streamline error and success handling with support for both reference (Result) and value types (ValueResult).

      Features:
      Class-based (Result): Ideal for scenarios requiring reference semantics.
      Struct-based (ValueResult): Immutable and optimized for high-performance use cases.
      Extensibility: Easily integrate custom error handling logic.

      Key Types:
      IError, Error
      IResult, IResult&lt;T>
      Result, Result&lt;T>
      ValueResult, ValueResult&lt;T>

      Perfect for replacing exceptions with clean, type-safe alternatives.
    </Description>
  </PropertyGroup>
</Project>